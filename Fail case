func executeAndLogNpingCommand(testName, command string, sheet *xlsx.Sheet, outputStyle, passStyle, failStyle *xlsx.Style, t *testing.T) {
    output, err := executeNpingCommand(command, t)
    resultStyle := passStyle
    resultText := "Passed"

    // Check for packet loss in the output
    if strings.Contains(output, "packet loss") {
        packetLoss := strings.Split(output, "packet loss")[0]
        packetLossValue := strings.TrimSpace(strings.Split(packetLoss, ",")[2])

        // Extract the percentage of packet loss
        percentage := strings.Split(packetLossValue, " ")[0]
        packetLossPercentage, err := strconv.ParseFloat(percentage, 64)
        if err != nil {
            t.Logf("Error parsing packet loss percentage: %v", err)
        }

        // If packet loss percentage is greater than zero, mark the test as failed
        if packetLossPercentage > 0 {
            resultStyle = failStyle
            resultText = "Failed"
        }
    }

    // Extract relevant information from the output
    startIndex := strings.Index(output, "Statistics for host")
    endIndex := strings.Index(output, "Nping done")
    if startIndex != -1 && endIndex != -1 {
        output = output[startIndex:endIndex]
    }
 
    // Record the test name, output, and result in the sheet
    row := sheet.AddRow()
    testCell := row.AddCell() // Test name in column A
    testCell.Value = testName
 
    outputCell := row.AddCell() // Output in column B
    outputCell.Value = output
    outputCell.SetStyle(outputStyle)
 
    resultCell := row.AddCell() // Result in column C, styled based on the outcome
    resultCell.Value = resultText
    resultCell.SetStyle(resultStyle)
}
